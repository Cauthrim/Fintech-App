import org.gradle.api.tasks.testing.logging.TestExceptionFormat

group = 'com.academy.fintech'
version = '1.0-SNAPSHOT'

subprojects {
    apply plugin: 'java'

    group = rootProject.group
    version = rootProject.version

    java {
        toolchain {
            languageVersion.set(JavaLanguageVersion.of(17))
        }
    }

    dependencies {
        // You can add common dependencies here...
        implementation libs.spring.starter
        implementation libs.spring.jpa
        implementation libs.spring.actuator
        implementation libs.spring.grpc
        implementation libs.spring.web

        compileOnly libs.tomcat.annotations
        compileOnly libs.lombok
        annotationProcessor libs.lombok

        implementation libs.postgresql.driver
        implementation libs.liquibase

        implementation libs.grpc.netty
        implementation libs.grpc.stub
        implementation libs.grpc.protobuf
        implementation libs.grpc.services
        implementation libs.protobuf.java

        testImplementation libs.spring.test
        testImplementation libs.jupiter
        testImplementation libs.testcontainers
        testImplementation libs.testcontainers.postgresql
        testImplementation libs.grpc.testing
    }

    repositories {
        mavenCentral()
    }

    test {
        jvmArgs([
                '--enable-preview',
                '--add-opens', 'jdk.compiler/com.sun.tools.javac.util=ALL-UNNAMED',
                '--add-opens', 'jdk.compiler/com.sun.tools.javac.parser=ALL-UNNAMED',
                '--add-opens', 'jdk.compiler/com.sun.tools.javac.code=ALL-UNNAMED',
                '--add-opens', 'jdk.compiler/com.sun.tools.javac.file=ALL-UNNAMED',
                '--add-opens', 'jdk.compiler/com.sun.tools.javac.main=ALL-UNNAMED',
                '--add-opens', 'jdk.compiler/com.sun.tools.javac.jvm=ALL-UNNAMED',
                '--add-opens', 'jdk.compiler/com.sun.tools.javac.processing=ALL-UNNAMED',
                '--add-opens', 'jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED',
                '--add-opens', 'jdk.compiler/com.sun.tools.javac.tree=ALL-UNNAMED'
        ])
        useJUnitPlatform()
        systemProperty "junit.jupiter.extensions.autodetection.enabled", "true"
        testLogging {
            showStandardStreams = true
            exceptionFormat TestExceptionFormat.FULL
            showExceptions true
            showCauses true
            showStackTraces true
        }
    }
}